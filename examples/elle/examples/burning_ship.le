use std/raylib;
use std/prelude;

const SCREEN_FACTOR = 80;
const SCREEN_WIDTH = 8 * SCREEN_FACTOR;
const SCREEN_HEIGHT = 8 * SCREEN_FACTOR;

fn main() {
    rl::init_window(SCREEN_WIDTH, SCREEN_HEIGHT, "UV Test");
    defer rl::close_window();
    rl::set_target_fps(60);

    shader := rl::load_shader(nil,"examples/resources/burning_ship.fs");

    defer rl::unload_shader(shader);

    tex := rl::get_default_texture();
    tex.width = SCREEN_WIDTH / 2;
    tex.height = SCREEN_HEIGHT / 2;

    while !rl::window_should_close() {
        rl::begin_drawing();
            rl::clear_background(RED);

            // Switch shader on and off each frame (triggers bug)
            rl::begin_shader_mode(shader);
               rl::draw_rectangle(100, 100, 400, 400, GREEN);
                  rl::draw_texture_pro(
                    tex,
                    Rectangle { x = 0, y = 0, width = tex.width, height = tex.height },
                    Rectangle { x = 0, y = 0, width = tex.width, height = tex.height },
                    Vector2 { x = 0, y = 0 },
                    0, WHITE
                  );
            rl::end_shader_mode();

            rl::draw_fps(4, 4);
        rl::end_drawing();
    }
}
